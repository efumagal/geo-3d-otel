name: Publish Docker image to GHCR

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION_NUMBER: latest

jobs:
  push_to_registry:
    name: Push Docker image to GH registry
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: create a custom version using run number offset by 1000 (run_number + 1000)
        run: |
          echo "VERSION_NUMBER=$((1000+GITHUB_RUN_NUMBER))" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}-${{ env.VERSION_NUMBER }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          #platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    
      - name: Scan Docker image
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: ${{ steps.meta.outputs.tags }}
          args: --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Update Deployment Image Tag
        working-directory: "kustomize"
        run: |
          kustomize edit set image geo3d-image=${{ steps.meta.outputs.tags }}
          kustomize build

      - name: "Push Updated Image Tag"
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "feat: Update deployment image tag to ${{ env.VERSION_NUMBER }}"
          git push
